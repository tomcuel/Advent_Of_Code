/*****************************************************************************
*                                                                            *
*  ------------------------------- stack.c --------------------------------  *
*                                                                            *
*****************************************************************************/

#include <stdlib.h>

#include "<NAME>_stack.h"

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_init ------------------------------  *
*                                                                            *
*****************************************************************************/

void <NAME>_stack_init (<NAME>_stack_t* stack) {
   <NAME>_list_init (stack);
}

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_destroy----------------------------  *
*                                                                            *
*****************************************************************************/

void <NAME>_stack_destroy (<NAME>_stack_t *stack) {
  <NAME>_list_destroy (stack);
}

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_size ------------------------------  *
*                                                                            *
*****************************************************************************/

int <NAME>_stack_size (<NAME>_stack_t * stack) {
  return <NAME>_list_size (stack);
}

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_push ------------------------------  *
*                                                                            *
*****************************************************************************/

int <NAME>_stack_push(<NAME>_stack_t *stack, <TYPE> data) {
  /*  Push the data onto the stack.  */
  return <NAME>_list_ins_next(stack, NULL, data);
}

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_pop -------------------------------  *
*                                                                            *
*****************************************************************************/

/* User has to check that the queue is not empty */
int <NAME>_stack_pop(<NAME>_stack_t *stack, <TYPE>* data) {
  /*  Pop the data off the stack.  */
  return <NAME>_list_rem_next(stack, NULL, data);
}

/*****************************************************************************
*                                                                            *
*  ------------------------------ stack_peek ------------------------------  *
*                                                                            *
*****************************************************************************/

/* User has to check that the stack is not empty */
<TYPE> <NAME>_stack_peek(<NAME>_stack_t * stack) {
    return stack->head->data;
}
